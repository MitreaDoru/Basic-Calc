{"version":3,"sources":["userOperation.js","Input.js","Calculator.js","App.js","index.js"],"names":["userOperation","operatorCheck","prev","operator","isNaN","slice","Input","placeholder","Calculator","useState","result","setResult","math","create","all","onClick","map","value","evaluate","toString","Fragment","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"wPAWeA,EAJO,CAClBC,cARkB,SAACC,EAAMC,GACzB,OAAIC,MAAMF,EAAKG,OAAO,IACXH,EAAKG,MAAM,GAAI,GAAKF,EAEpBD,EAAOC,CAEtB,G,OCCeG,EAPD,SAAH,GAAyB,IAAnBC,EAAW,EAAXA,YACb,OAAO,8BAEH,uBAAOA,YAAaA,KAE5B,EC6BeC,EA7BI,WACf,MAA4BC,mBAAS,IAAG,mBAAjCC,EAAM,KAAEC,EAAS,KAGlBC,EAAOC,YAAOC,IAAK,CAAC,GAC1B,OACI,gCACI,gCACI,cAAC,EAAK,CAACP,YAAaG,IACpB,wBAAQK,QAAS,kBAAMJ,EAAU,GAAG,EAAC,mBACrC,wBAAQI,QAAS,kBAAMJ,GAAU,SAAAT,GAAI,OAAIA,EAAKG,MAAM,GAAI,EAAE,GAAC,EAAC,qBAEhE,8BAVW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAWvEW,KAAI,SAAAC,GACZ,OAAKb,MAAMa,IAAoB,MAAVA,EAEA,MAAVA,EACA,wBAAQF,QAAS,kBAAMJ,EAAUC,EAAKM,SAASR,GAAQS,WAAW,EAAC,SAAEF,IAGpE,eAAC,IAAMG,SAAQ,WAAC,wBAAQL,QAAS,kBAAMJ,GAAU,SAAAT,GAAI,OAAIF,EAAcC,cAAcC,EAAMe,EAAM,GAAC,EAAC,SAAEA,IAAe,IAAC,0BALtH,wBAAQF,QAAS,kBAAMJ,GAAU,SAAAT,GAAI,OAAIA,EAAOe,CAAK,GAAC,EAAC,SAAEA,GAQxE,QAIhB,ECpBeI,EATH,WACV,OACE,8BACE,cAAC,EAAU,KAIjB,ECJaC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,aAAU,UAAC,cAAC,EAAG,M","file":"static/js/main.c010a78a.chunk.js","sourcesContent":["const operatorCheck = (prev, operator) => {\r\n    if (isNaN(prev.slice(-1))) {\r\n        return prev.slice(0, -1) + operator\r\n    } else {\r\n        return prev + operator\r\n    }\r\n}\r\nconst userOperation = {\r\n    operatorCheck\r\n}\r\n\r\nexport default userOperation","const Input = ({ placeholder }) => {\r\n    return <div>\r\n\r\n        <input placeholder={placeholder}></input>\r\n    </div>\r\n}\r\n\r\nexport default Input","import { useState } from \"react\"\r\nimport { create, all } from 'mathjs'\r\nimport userOperation from \"./userOperation\"\r\nimport React from \"react\"\r\nimport Input from \"./Input\"\r\nconst Calculator = () => {\r\n    const [result, setResult] = useState('')\r\n    const calcValues = ['1', '2', '3', '+', '4', '5', '6', '-', '7', '8', '9', '*', '0', '.', '=', '/']\r\n\r\n    const math = create(all, {})\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Input placeholder={result} />\r\n                <button onClick={() => setResult('')}>Clear</button>\r\n                <button onClick={() => setResult(prev => prev.slice(0, -1))}>Undo</button>\r\n            </div>\r\n            <div>\r\n                {calcValues.map(value => {\r\n                    if (!isNaN(value) || value === '.') {\r\n                        return <button onClick={() => setResult(prev => prev + value)}>{value}</button>\r\n                    } else if (value === '=') {\r\n                        return <button onClick={() => setResult(math.evaluate(result).toString())}>{value}</button>\r\n\r\n                    } else {\r\n                        return (<React.Fragment><button onClick={() => setResult(prev => userOperation.operatorCheck(prev, value))}>{value}</button> <br /></React.Fragment>)\r\n\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculator","\nimport \"./index.css\";\nimport Calculator from \"./Calculator\";\nconst App = () => {\n  return (\n    <div>\n      <Calculator />\n    </div>\n  )\n\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport { StrictMode } from 'react';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<StrictMode><App /></StrictMode>);\n"],"sourceRoot":""}