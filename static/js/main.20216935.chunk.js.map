{"version":3,"sources":["Calculator.module.css","Input.module.css","userOperation.js","Input.js","Calculator.js","App.js","index.js"],"names":["module","exports","userOperation","operatorCheck","prev","operator","isNaN","slice","Input","placeholder","className","styled","input","Calculator","useState","result","setResult","math","create","all","actions","action","onClick","map","value","equal","evaluate","toString","Fragment","operators","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,MAAQ,0BAA0B,MAAQ,0BAA0B,UAAY,8B,0CCAtID,EAAOC,QAAU,CAAC,MAAQ,qB,kICUXC,EAJO,CAClBC,cARkB,SAACC,EAAMC,GACzB,OAAIC,MAAMF,EAAKG,OAAO,IACXH,EAAKG,MAAM,GAAI,GAAKF,EAEpBD,EAAOC,CAEtB,G,wBCGeG,EAPD,SAAH,GAAyB,IAAnBC,EAAW,EAAXA,YACb,OAAO,8BAEH,uBAAOC,UAAWC,IAAOC,MAAOH,YAAaA,KAErD,E,iBC6BeI,EA9BI,WACf,MAA4BC,mBAAS,IAAG,mBAAjCC,EAAM,KAAEC,EAAS,KAGlBC,EAAOC,YAAOC,IAAK,CAAC,GAC1B,OACI,gCACI,cAAC,EAAK,CAACV,YAAaM,IACpB,sBAAKL,UAAWC,IAAOS,QAAQ,UAE3B,wBAAQV,UAAWC,IAAOU,OAAQC,QAAS,kBAAMN,EAAU,GAAG,EAAC,mBAC/D,wBAAQN,UAAWC,IAAOU,OAAQC,QAAS,kBAAMN,GAAU,SAAAZ,GAAI,OAAIA,EAAKG,MAAM,GAAI,EAAE,GAAC,EAAC,qBAE1F,8BAXW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAYvEgB,KAAI,SAAAC,GACZ,OAAKlB,MAAMkB,IAAoB,MAAVA,EAEA,MAAVA,EACA,wBAAQd,UAAWC,IAAOc,MAAOH,QAAS,kBAAMN,EAAUC,EAAKS,SAASX,GAAQY,WAAW,EAAC,SAAEH,IAG7F,eAAC,IAAMI,SAAQ,WAAC,wBAAQlB,UAAWC,IAAOkB,UAAWP,QAAS,kBAAMN,GAAU,SAAAZ,GAAI,OAAIF,EAAcC,cAAcC,EAAMoB,EAAM,GAAC,EAAC,SAAEA,IAAe,IAAC,0BALnJ,wBAAQd,UAAWC,IAAOa,MAAOF,QAAS,kBAAMN,GAAU,SAAAZ,GAAI,OAAIA,EAAOoB,CAAK,GAAC,EAAC,SAAEA,GAQjG,QAIhB,ECtBeM,EATH,WACV,OACE,8BACE,cAAC,EAAU,KAIjB,ECJaC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,aAAU,UAAC,cAAC,EAAG,M","file":"static/js/main.20216935.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"action\":\"Calculator_action__neurN\",\"value\":\"Calculator_value__BDXlG\",\"equal\":\"Calculator_equal__2d8rg\",\"operators\":\"Calculator_operators__3c1OR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3Vk4L\"};","const operatorCheck = (prev, operator) => {\r\n    if (isNaN(prev.slice(-1))) {\r\n        return prev.slice(0, -1) + operator\r\n    } else {\r\n        return prev + operator\r\n    }\r\n}\r\nconst userOperation = {\r\n    operatorCheck\r\n}\r\n\r\nexport default userOperation","import styled from './Input.module.css'\r\n\r\nconst Input = ({ placeholder }) => {\r\n    return <div>\r\n\r\n        <input className={styled.input} placeholder={placeholder}></input>\r\n    </div>\r\n}\r\n\r\nexport default Input","import { useState } from \"react\"\r\nimport { create, all } from 'mathjs'\r\nimport userOperation from \"./userOperation\"\r\nimport React from \"react\"\r\nimport Input from \"./Input\"\r\nimport styled from './Calculator.module.css'\r\nconst Calculator = () => {\r\n    const [result, setResult] = useState('')\r\n    const calcValues = ['1', '2', '3', '+', '4', '5', '6', '-', '7', '8', '9', '*', '0', '.', '=', '/']\r\n\r\n    const math = create(all, {})\r\n    return (\r\n        <div>\r\n            <Input placeholder={result} />\r\n            <div className={styled.actions}>\r\n\r\n                <button className={styled.action} onClick={() => setResult('')}>Clear</button>\r\n                <button className={styled.action} onClick={() => setResult(prev => prev.slice(0, -1))}>Undo</button>\r\n            </div>\r\n            <div>\r\n                {calcValues.map(value => {\r\n                    if (!isNaN(value) || value === '.') {\r\n                        return <button className={styled.value} onClick={() => setResult(prev => prev + value)}>{value}</button>\r\n                    } else if (value === '=') {\r\n                        return <button className={styled.equal} onClick={() => setResult(math.evaluate(result).toString())}>{value}</button>\r\n\r\n                    } else {\r\n                        return (<React.Fragment><button className={styled.operators} onClick={() => setResult(prev => userOperation.operatorCheck(prev, value))}>{value}</button> <br /></React.Fragment>)\r\n\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculator","\nimport \"./index.css\";\nimport Calculator from \"./Calculator\";\nconst App = () => {\n  return (\n    <div>\n      <Calculator />\n    </div>\n  )\n\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport { StrictMode } from 'react';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<StrictMode><App /></StrictMode>);\n"],"sourceRoot":""}